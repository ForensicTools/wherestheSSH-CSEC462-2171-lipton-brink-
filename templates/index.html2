      
<!DOCTYPE html>
<html>
<meta charset="utf-8">
<style>


.background {
  fill: none;
  pointer-events: all;
}

.feature {
  fill: #ccc;
  cursor: pointer;
}

.feature.active {
  fill: orange;
}

.mesh {
  fill: none;
  stroke: #fff;
  stroke-linecap: round;
  stroke-linejoin: round;
}




</style>
<body>
<script src="/static/d3.min.js"></script>
<script src="/static/d3.js"></script>
<script>



        var width = 960,
            height = 500,
            centered;


        var svg = d3.select("body").append("svg")
            .attr("width", width)
            .attr("height",height)

        svg.append("rect")
            .attr("class", "background")
            .attr("width", width)
            .attr("height", height)
            .on("click", clicked);



 	var g = svg.append("g")
        .style("stroke-width", "1.5px");

	var projection = d3.geoAlbers()
                                   .translate([width/2, height/2])    // translate to center of screen
                                   .scale([1000]);
        var path = d3.geoPath().projection(projection);  // tell path generator to use albersUsa projection


        d3.json("/static/us-states.json", function(data) {

       var group = svg.selectAll("g")
        .data(data.features)
        .enter()
        .append("g")



                var areas = group.append("path")
                    .attr("d",path)
                    .attr("class", "feature")
            	.on("click", clicked)
                    .style("stroke", "white")
                .style("stroke-width", "1")
                    .attr("class","area")
                    .attr("fill","steelblue")

        });

        function clicked(d) {
  var x, y, k;

  if (d && centered !== d) {
    var centroid = path.centroid(d);
    x = centroid[0];
    y = centroid[1];
    k = 4;
    centered = d;
  } else {
    x = width / 2;
    y = height / 2;
    k = 1;
    centered = null;
  }

  g.selectAll("path")
      .classed("active", centered && function(d) { return d === centered; });

  g.transition()
      .duration(750)
      .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")scale(" + k + ")translate(" + -x + "," + -y + ")")
      .style("stroke-width", 1.5 / k + "px");
}
</script>
</body>
</html>
